name: Deploy to EC2

on:
  push:
    branches:
      - main  # main 브랜치에 코드가 푸시되면 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Project
        run: mvn clean package -DskipTests
        working-directory: demoproject

      # 🔹 GitHub Actions에 SSH Key 설정
      - name: Create SSH Key File
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/demo-key.pem
          chmod 600 ~/.ssh/demo-key.pem

      # 🔹 EC2로 파일 전송 (SCP)
      - name: Copy to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: asher
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "demoproject/target/*.jar"
          target: "/home/asher/app"

      # 🔹 EC2에서 배포 스크립트 실행
      - name: Restart Application
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: asher
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            pkill -f "java -jar" || true
            nohup java -jar ~/app/*.jar > ~/app/log.txt 2>&1 &

      # 🔹 SSH Debug 확인 (문제 발생 시 실행)
      - name: Debug SSH Connection
        run: ssh -v -i ~/.ssh/demo-key.pem asher@${{ secrets.EC2_HOST }} "echo 'SSH 연결 성공!'"
