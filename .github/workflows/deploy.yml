name: Deploy to EC2

on:
  push:
    branches:
      - main  # main 브랜치에 코드가 푸시되면 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 🔹 프로젝트 빌드 (경로 확인 필수)
      - name: Build Project
        run: mvn clean package -DskipTests
        working-directory: demoproject  # 필요하면 제거

      # 🔹 SSH Key 설정 및 EC2 호스트 등록
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/demo-key.pem
          chmod 600 ~/.ssh/demo-key.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # 🔹 빌드된 JAR 파일 전송
      - name: Copy to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "demoproject/target/*.jar"  # 필요하면 "target/*.jar"로 변경
          target: "/home/${{ secrets.EC2_USERNAME }}/app"

      # 🔹 EC2에서 애플리케이션 실행
      - name: Restart Application
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            PID=$(pgrep -f 'app/*.jar') && kill $PID || true
            nohup java -jar ~/app/*.jar > ~/app/log.txt 2>&1 &

      # 🔹 SSH Debug (옵션)
      - name: Debug SSH Connection
        run: ssh -vvv -i ~/.ssh/demo-key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "echo 'SSH 연결 성공!'"

      - name: Debug SSH Key
        run: |
          echo "🔹 ~/.ssh 디렉토리 확인:"
          ls -lah ~/.ssh
      
          echo "🔹 SSH Key 파일 내용 확인:"
          cat ~/.ssh/demo-key.pem | head -n 5  # 키가 정상적으로 생성되었는지 확인

